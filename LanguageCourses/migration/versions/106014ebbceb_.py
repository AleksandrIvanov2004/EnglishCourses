"""empty message

Revision ID: 106014ebbceb
Revises: 
Create Date: 2024-12-07 11:00:07.870747

"""
from alembic import op
import sqlalchemy as sa

from project.core.config import settings


# revision identifiers, used by Alembic.
revision = '106014ebbceb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('language', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('level', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('second_name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('email', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('password', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('first_name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('second_name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('role', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    schema='public'
    )
    op.create_table('courses_raiting',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('raiting', sa.Float(), nullable=False),
    sa.Column('actually_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['public.courses.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('course_id'),
    schema='public'
    )
    op.create_table('groups',
    sa.Column('group_number', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['public.courses.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('group_number'),
    schema='public'
    )
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['public.courses.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('pay_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['public.courses.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('streams',
    sa.Column('stream_number', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['public.courses.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('stream_number'),
    schema='public'
    )
    op.create_table('teachers_raiting',
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('raiting', sa.Float(), nullable=False),
    sa.Column('actually_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['public.teachers.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('teacher_id'),
    schema='public'
    )
    op.create_table('change_of_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_number_before', sa.Integer(), nullable=False),
    sa.Column('group_number_after', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_number_after'], ['public.groups.group_number'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['group_number_before'], ['public.groups.group_number'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('group_number', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('start_lesson', sa.DateTime(), nullable=False),
    sa.Column('end_lesson', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_number'], ['public.groups.group_number'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lesson_id'], ['public.lessons.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['public.teachers.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('users_and_groups',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_number', sa.Integer(), nullable=False),
    sa.Column('stream_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_number'], ['public.groups.group_number'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['stream_number'], ['public.streams.stream_number'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'group_number', 'stream_number'),
    schema='public'
    )
    op.create_table('users_has_schedule',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.Column('attendance', sa.Boolean(), nullable=False),
    sa.Column('mark', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['schedule_id'], ['public.schedule.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'schedule_id'),
    schema='public'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_has_schedule', schema='public')
    op.drop_table('users_and_groups', schema='public')
    op.drop_table('schedule', schema='public')
    op.drop_table('change_of_groups', schema='public')
    op.drop_table('teachers_raiting', schema='public')
    op.drop_table('streams', schema='public')
    op.drop_table('payments', schema='public')
    op.drop_table('lessons', schema='public')
    op.drop_table('groups', schema='public')
    op.drop_table('courses_raiting', schema='public')
    op.drop_table('users', schema='public')
    op.drop_table('teachers', schema='public')
    op.drop_table('courses', schema='public')
    # ### end Alembic commands ###